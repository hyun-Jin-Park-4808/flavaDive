DROP TABLE IF EXISTS MEMBER CASCADE;

CREATE TABLE MEMBER
(
    ID                               BIGSERIAL PRIMARY KEY,                -- 자동 증가하는 BIGINT
    ROLE                             VARCHAR(10)                 NOT NULL CHECK (ROLE IN ('ADMIN', 'GENERAL')),
    EMAIL                            VARCHAR(255)                NOT NULL,
    PASSWORD                         VARCHAR(255)                NOT NULL, -- 암호화 필요
    NAME                             VARCHAR(50)                 NOT NULL,
    NICKNAME                         VARCHAR(50)                 NOT NULL, -- 숫자와 문자로만
    PHONE_NUMBER                     VARCHAR(50)                 NOT NULL,
    IS_NOTIFICATION_ENABLED          BOOLEAN                     NOT NULL DEFAULT FALSE,
    MANNER_SCORE                     INT                         NOT NULL DEFAULT 0,
    IS_MONTHLY_EVALUATOR             BOOLEAN                     NOT NULL DEFAULT FALSE,
    BUSINESS_REGISTRATION_NUMBER     VARCHAR(255)                NULL,
    BUSINESS_REGISTRATION_IMAGE_PATH VARCHAR(1023)               NULL,
    CREATED_AT                       TIMESTAMP WITHOUT TIME ZONE NOT NULL, -- YYYY-MM-DD HH:MM:SS
    UPDATED_AT                       TIMESTAMP WITHOUT TIME ZONE NULL
);

CREATE TABLE NOTIFICATION
(
    ID                BIGSERIAL PRIMARY KEY,
    MEMBER_ID         BIGINT                      NOT NULL,
    NOTIFICATION_TYPE VARCHAR(10)                 NOT NULL CHECK (NOTIFICATION_TYPE IN
                                                                  ('MONTHLY_EVALUATOR', 'CHAT', 'DIARY', 'RESTAURANT',
                                                                   'RESERVATION')),
    CONTENT           VARCHAR(1023)               NULL,
    CREATED_AT        TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    CONSTRAINT FK_NOTIFICATION_MEMBER FOREIGN KEY (MEMBER_ID) REFERENCES MEMBER (ID) ON DELETE CASCADE
);
CREATE INDEX IDX_NOTIFICATION_MEMBER_ID ON NOTIFICATION (MEMBER_ID);

CREATE TABLE RESTAURANT
(
    ID                          BIGSERIAL PRIMARY KEY,
    MEMBER_ID                   BIGINT                      NOT NULL,
    NAME                        VARCHAR(255)                NOT NULL,
    LOCATION                    VARCHAR(255)                NOT NULL,
    THUMBNAIL_PATH              VARCHAR(1023)               NULL,
    DESCRIPTION                 TEXT                        NULL,
    SCORE                       INT                         NOT NULL DEFAULT 0,
    IS_ENTRANCE                 BOOLEAN                     NOT NULL DEFAULT FALSE,
    IS_ADVANCE_PAYMENT_REQUIRED BOOLEAN                     NOT NULL DEFAULT FALSE,
    CREATED_AT                  TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    UPDATED_AT                  TIMESTAMP WITHOUT TIME ZONE NULL,
    CONSTRAINT FK_NOTIFICATION_MEMBER FOREIGN KEY (MEMBER_ID) REFERENCES MEMBER (ID) ON DELETE CASCADE
);
CREATE INDEX IDX_RESTAURANT_MEMBER_ID ON RESTAURANT (MEMBER_ID);

CREATE TABLE RESTAURANT_BOOK_MARK
(
    ID            BIGSERIAL PRIMARY KEY,
    RESTAURANT_ID BIGINT                      NOT NULL,
    MEMBER_ID     BIGINT                      NOT NULL,
    CREATED_AT    TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    CONSTRAINT FK_RESTAURANT_BOOK_MARK_RESTAURANT FOREIGN KEY (RESTAURANT_ID) REFERENCES RESTAURANT (ID) ON DELETE CASCADE,
    CONSTRAINT FK_RESTAURANT_BOOK_MARK_MEMBER FOREIGN KEY (MEMBER_ID) REFERENCES MEMBER (ID) ON DELETE CASCADE
);
CREATE INDEX IDX_RESTAURANT_BOOK_MARK_RESTAURANT_ID ON RESTAURANT_BOOK_MARK (RESTAURANT_ID);
CREATE INDEX IDX_RESTAURANT_BOOK_MARK_MEMBER_ID ON RESTAURANT_BOOK_MARK (MEMBER_ID);

CREATE TABLE FLAVA_DIARY
(
    ID                 BIGSERIAL PRIMARY KEY,
    RESTAURANT_ID      BIGINT                      NOT NULL,
    MEMBER_ID          BIGINT                      NOT NULL,
    IS_PUBLIC          BOOLEAN                     NOT NULL DEFAULT TRUE,
    IS_GLOBAL          BOOLEAN                     NOT NULL DEFAULT FALSE,
    RECEIPT_IMAGE_PATH VARCHAR(1023)               NULL,
    THUMBNAIL_PATH     VARCHAR(1023)               NULL,
    OVERALL_REVIEW     TEXT                        NULL,
    SERVICE_SCORE      INT                         NOT NULL DEFAULT 0,
    SPEED_SCORE        INT                         NOT NULL DEFAULT 0,
    KINDNESS_SCORE     INT                         NOT NULL DEFAULT 0,
    CLEANLINESS_SCORE  INT                         NOT NULL DEFAULT 0,
    CREATED_AT         TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    UPDATED_AT         TIMESTAMP WITHOUT TIME ZONE NULL,
    CONSTRAINT FK_FLAVA_DIARY_RESTAURANT FOREIGN KEY (RESTAURANT_ID) REFERENCES RESTAURANT (ID) ON DELETE CASCADE,
    CONSTRAINT FK_FLAVA_DIARY_MEMBER FOREIGN KEY (MEMBER_ID) REFERENCES MEMBER (ID) ON DELETE CASCADE
);
CREATE INDEX IDX_FLAVA_DIARY_RESTAURANT_ID ON FLAVA_DIARY (RESTAURANT_ID);
CREATE INDEX IDX_FLAVA_DIARY_MEMBER_ID ON FLAVA_DIARY (MEMBER_ID);

CREATE TABLE FLAVA_DIARY_DETAILS
(
    ID                   BIGSERIAL PRIMARY KEY,
    FLAVA_DIARY_ID       BIGINT                      NOT NULL,
    MENU_NAME            VARCHAR(50)                 NOT NULL,
    MENU_IMAGE_PATH      VARCHAR(1023)               NULL,
    MENU_PRICE           INT                         NOT NULL DEFAULT 0,
    REVIEW               TEXT                        NULL,
    CREAMY_LEVEL         INT                         NOT NULL DEFAULT 0,
    OILY_LEVEL           INT                         NOT NULL DEFAULT 0,
    SALTY_LEVEL          INT                         NOT NULL DEFAULT 0,
    SWEET_LEVEL          INT                         NOT NULL DEFAULT 0,
    SOUR_LEVEL           INT                         NOT NULL DEFAULT 0,
    SPICY_LEVEL          INT                         NOT NULL DEFAULT 0,
    OVERALL_FLAVOR_LEVEL INT                         NOT NULL DEFAULT 0,
    CREATED_AT           TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    UPDATED_AT           TIMESTAMP WITHOUT TIME ZONE NULL,
    CONSTRAINT FK_FLAVA_DIARY_DETAILS_FLAVA_DIARY FOREIGN KEY (FLAVA_DIARY_ID) REFERENCES FLAVA_DIARY (ID) ON DELETE CASCADE
);
CREATE INDEX IDX_FLAVA_DIARY_DETAILS_FLAVA_DIARY_ID ON FLAVA_DIARY_DETAILS (FLAVA_DIARY_ID);

CREATE TABLE DIARY_DETAILS_BOOK_MARK
(
    ID                     BIGSERIAL PRIMARY KEY,
    FLAVA_DIARY_DETAILS_ID BIGINT                      NOT NULL,
    MEMBER_ID              BIGINT                      NOT NULL,
    CREATED_AT             TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    CONSTRAINT FK_DIARY_DETAILS_BOOK_MARK_FLAVA_DIARY_DETAILS FOREIGN KEY (FLAVA_DIARY_DETAILS_ID) REFERENCES FLAVA_DIARY_DETAILS (ID) ON DELETE CASCADE,
    CONSTRAINT FK_DIARY_DETAILS_BOOK_MARK_MEMBER FOREIGN KEY (MEMBER_ID) REFERENCES MEMBER (ID) ON DELETE CASCADE
);
CREATE INDEX IDX_DIARY_DETAILS_BOOK_MARK_RESTAURANT_ID ON DIARY_DETAILS_BOOK_MARK (FLAVA_DIARY_DETAILS_ID);
CREATE INDEX IDX_DIARY_DETAILS_BOOK_MARK_MEMBER_ID ON DIARY_DETAILS_BOOK_MARK (MEMBER_ID);

CREATE TABLE DIARY_BOOK_MARK
(
    ID             BIGSERIAL PRIMARY KEY,
    FLAVA_DIARY_ID BIGINT                      NOT NULL,
    MEMBER_ID      BIGINT                      NOT NULL,
    CREATED_AT     TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    CONSTRAINT FK_DIARY_BOOK_MARK_FLAVA_DIARY FOREIGN KEY (FLAVA_DIARY_ID) REFERENCES FLAVA_DIARY (ID) ON DELETE CASCADE,
    CONSTRAINT FK_DIARY_BOOK_MARK_MEMBER FOREIGN KEY (MEMBER_ID) REFERENCES MEMBER (ID) ON DELETE CASCADE
);
CREATE INDEX IDX_DIARY_BOOK_MARK_FLAVA_DIARY_ID ON DIARY_BOOK_MARK (FLAVA_DIARY_ID);
CREATE INDEX IDX_DIARY_BOOK_MARK_MEMBER_ID ON DIARY_BOOK_MARK (MEMBER_ID);

CREATE TABLE RESERVATION
(
    ID                      BIGSERIAL PRIMARY KEY,
    RESTAURANT_ID           BIGINT                      NOT NULL,
    MEMBER_ID               BIGINT                      NOT NULL,
    RESERVATION_DATE        DATE                        NOT NULL,
    RESERVATION_TIME        TIME                        NOT NULL,
    NUMBER_OF_RESERVATIONS  INT                         NOT NULL DEFAULT 0,
    RESERVATION_STATUS      VARCHAR(10)                 NOT NULL CHECK (RESERVATION_STATUS IN
                                                                        ('PENDING', 'CONFIRMED', 'CANCELED', 'PAID',
                                                                         'REFUND')),
    IS_ADVANCE_PAYMENT_PAID BOOLEAN                     NOT NULL DEFAULT FALSE,
    REQUIREMENTS            TEXT                        NULL,
    PREORDER_MENUS          TEXT                        NULL,
    CREATED_AT              TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    UPDATED_AT              TIMESTAMP WITHOUT TIME ZONE NULL,
    CONSTRAINT FK_RESERVATION_RESTAURANT FOREIGN KEY (RESTAURANT_ID) REFERENCES RESTAURANT (ID) ON DELETE CASCADE,
    CONSTRAINT FK_RESERVATION_MEMBER FOREIGN KEY (MEMBER_ID) REFERENCES MEMBER (ID) ON DELETE CASCADE
);
CREATE INDEX IDX_RESERVATION_RESTAURANT_ID ON RESERVATION (RESTAURANT_ID);
CREATE INDEX IDX_RESERVATION_MEMBER_ID ON RESERVATION (MEMBER_ID);

CREATE TABLE PAYMENT
(
    ID                    BIGSERIAL PRIMARY KEY,
    RESTAURANT_ID         BIGINT                      NOT NULL,
    PAY_METHOD            VARCHAR(10)                 NOT NULL CHECK (PAY_METHOD IN
                                                                      ('CARD', 'TRANSFER', 'GIFT_CERTIFICATE')),
    PAYMENT_STATUS        VARCHAR(10)                 NOT NULL CHECK (PAYMENT_STATUS IN
                                                                      ('FAILED', 'CANCELED', 'PAID',
                                                                       'PARTIAL_CANCELED', 'PAY_PENDING', 'READY',
                                                                       'VIRTUAL_ACCOUNT_ISSUED', 'FORGERY')),
    PAYMENT_AMOUNT        INT                         NOT NULL DEFAULT 0,
    PAYMENT_REVERSAL_TYPE VARCHAR(10)                 NOT NULL CHECK (PAYMENT_REVERSAL_TYPE IN
                                                                      ('FULL_REFUNDED', 'PARTIAL_REFUNDED',
                                                                       'FULL_CANCELED', 'PARTIAL_CANCELED')),
    REASON_FOR_REVERSAL   TEXT                        NULL,
    CANCELED_AMOUNT       TEXT                        NULL,
    CREATED_AT            TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    UPDATED_AT            TIMESTAMP WITHOUT TIME ZONE NULL,
    CONSTRAINT FK_PAYMENT_RESTAURANT FOREIGN KEY (RESTAURANT_ID) REFERENCES RESTAURANT (ID) ON DELETE CASCADE
);
CREATE INDEX IDX_PAYMENT_RESTAURANT_ID ON PAYMENT (RESTAURANT_ID);

CREATE TABLE CHAT_ROOM
(
    ID            BIGSERIAL PRIMARY KEY,
    RESTAURANT_ID BIGINT                      NOT NULL,
    HOST_ID       BIGINT                      NOT NULL,
    ANNOUNCEMENT  TEXT                        NULL,
    CREATED_AT    TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    UPDATED_AT    TIMESTAMP WITHOUT TIME ZONE NULL,
    CONSTRAINT FK_CHAT_ROOM_RESTAURANT FOREIGN KEY (RESTAURANT_ID) REFERENCES RESTAURANT (ID) ON DELETE CASCADE,
    CONSTRAINT FK_CHAT_ROOM_MEMBER FOREIGN KEY (HOST_ID) REFERENCES MEMBER (ID) ON DELETE CASCADE
);
CREATE INDEX IDX_CHAT_ROOM_RESTAURANT_ID ON CHAT_ROOM (RESTAURANT_ID);
CREATE INDEX IDX_CHAT_ROOM_MEMBER_ID ON CHAT_ROOM (HOST_ID);

CREATE TABLE CHAT_ROOM_MEMBER
(
    ID           BIGSERIAL PRIMARY KEY,
    MEMBER_ID    BIGINT                      NOT NULL,
    CHAT_ROOM_ID BIGINT                      NOT NULL,
    CREATED_AT   TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    CONSTRAINT FK_CHAT_ROOM_MEMBER_MEMBER FOREIGN KEY (MEMBER_ID) REFERENCES MEMBER (ID) ON DELETE CASCADE,
    CONSTRAINT FK_CHAT_ROOM_MEMBER_CHAT_ROOM FOREIGN KEY (CHAT_ROOM_ID) REFERENCES CHAT_ROOM (ID) ON DELETE CASCADE
);
CREATE INDEX IDX_CHAT_ROOM_MEMBER_MEMBER_ID ON CHAT_ROOM_MEMBER (MEMBER_ID);
CREATE INDEX IDX_CHAT_ROOM_MEMBER_CHAT_ROOM_ID ON CHAT_ROOM_MEMBER (CHAT_ROOM_ID);

CREATE TABLE CHAT_MESSAGE
(
    ID           BIGSERIAL PRIMARY KEY,
    CHAT_ROOM_ID BIGINT                      NOT NULL,
    SENDER_ID    BIGINT                      NOT NULL,
    CONTENT      TEXT                        NULL,
    LIKE_COUNT   INT                         NOT NULL DEFAULT 0,
    IS_REPORTED  BOOLEAN                     NOT NULL DEFAULT FALSE,
    CREATED_AT   TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    CONSTRAINT FK_CHAT_MESSAGE_CHAT_ROOM FOREIGN KEY (CHAT_ROOM_ID) REFERENCES CHAT_ROOM (ID) ON DELETE CASCADE,
    CONSTRAINT FK_CHAT_MESSAGE_CHAT_ROOM_MEMBER FOREIGN KEY (SENDER_ID) REFERENCES CHAT_ROOM_MEMBER (ID) ON DELETE CASCADE
);
CREATE INDEX IDX_CHAT_MESSAGE_CHAT_ROOM_ID ON CHAT_MESSAGE (CHAT_ROOM_ID);
CREATE INDEX IDX_CHAT_MESSAGE_CHAT_ROOM_MEMBER_ID ON CHAT_MESSAGE (SENDER_ID);

CREATE TABLE CHAT_BOOK_MARK
(
    ID              BIGSERIAL PRIMARY KEY,
    CHAT_MESSAGE_ID BIGINT                      NOT NULL,
    MEMBER_ID       BIGINT                      NOT NULL,
    CREATED_AT      TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    CONSTRAINT FK_CHAT_BOOK_MARK_CHAT_MESSAGE FOREIGN KEY (CHAT_MESSAGE_ID) REFERENCES CHAT_MESSAGE (ID) ON DELETE CASCADE,
    CONSTRAINT FK_CHAT_BOOK_MARK_MEMBER FOREIGN KEY (MEMBER_ID) REFERENCES MEMBER (ID) ON DELETE CASCADE
);
CREATE INDEX IDX_CHAT_BOOK_MARK_CHAT_MESSAGE_ID ON CHAT_BOOK_MARK (CHAT_MESSAGE_ID);
CREATE INDEX IDX_CHAT_BOOK_MARK_MEMBER_ID ON CHAT_BOOK_MARK (MEMBER_ID);
